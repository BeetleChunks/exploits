/* comments!
Compile with: 
		javac decrypt.java
		
Run as:
		java Decrypt oe2FVz/rcjokKW2hIDGE7nSX1U+VKRjA
		7474
		
		java Decrypt BFBiFqp/qhvyxrTdjGtf/9qxlPCouNSP
		tibco
 */

import java.io.ByteArrayInputStream;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;


class Decrypt
{
	public static void main (String [] arguments)
	{
		try
		{
			byte[] keyBytes = { 28, -89, -101, -111, 91, -113, 26, -70, 98, -80, -23, -53, -118, 93, -83, -17, 28, -89, -101, -111, 91, -113, 26, -70 };
	
			String algo = "DESede/CBC/PKCS5Padding";
		
			String encryptedText = arguments[0];
			byte[] message = Base64.getDecoder().decode(encryptedText);

			ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(message);
	
			Cipher decipher = Cipher.getInstance(algo);

			int i = decipher.getBlockSize();
			byte[] ivSetup = new byte[i];
			byteArrayInputStream.read(ivSetup);

			SecretKey key = new SecretKeySpec(keyBytes, 0, keyBytes.length, "DESede");
	  
			decipher.init(2, key, new IvParameterSpec(ivSetup));
	
			// Magic, I admit I don't understand why this is needed.
			CipherInputStream cipherInputStream = new CipherInputStream(byteArrayInputStream, decipher);
			char[] plaintext;
			char[] arrayOfChar1 = new char[(message.length - i) / 2];
			byte[] arrayOfByte4 = new byte[2];
			byte b = 0;

			while (2 == cipherInputStream.read(arrayOfByte4, 0, 2)) {
				arrayOfChar1[b++] = (char)((char)arrayOfByte4[1] << '\b' | (char)arrayOfByte4[0]);
			}
			
			cipherInputStream.close();
  
			if (b == arrayOfChar1.length) {
				plaintext = arrayOfChar1;
			} else {
				char[] arrayOfChar = new char[b];
				System.arraycopy(arrayOfChar1, 0, arrayOfChar, 0, b);
				for (b = 0; b < arrayOfChar1.length; b++) {
				arrayOfChar1[b] = Character.MIN_VALUE;
				}

				plaintext = arrayOfChar;
				// End of Magic
			} 
  
			System.out.println(plaintext);

		}

		catch (Exception ex)
		{
			System.out.println("Barf...");
			System.out.println(ex);
		}
	}
}

